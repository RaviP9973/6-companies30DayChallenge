class Solution {
private:
    bool valid(int x,int y, int m,int n){
        // bool ans = true;
        if(x < 0 || x >= m) return false;

        if(y < 0 || y >= n) return false;

        return true;
    }
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int m = img.size();
        int n = img[0].size();

        vector<vector<int>> result(m,vector<int>(n));
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                int validCount = 1;

                int left = (j-1 >= 0 ? img[i][j-1] : 0);
                if(valid(i,j-1,m,n)) validCount++;
                int right = (j+1 < n ? img[i][j+1] : 0);
                if(valid(i,j+1,m,n)) validCount++;
                int top = (i-1 >= 0 ? img[i-1][j] : 0);
                if(valid(i-1,j,m,n)) validCount++;
                int bottumn = (i+1 < m ? img[i+1][j] : 0);
                if(valid(i+1,j,m,n)) validCount++;
                int bottumnLeft = (i+1 < m && j-1 >=0 ? img[i+1][j-1] : 0);
                if(valid(i+1,j-1,m,n)) validCount++;
                int bottumnRight = (i+1 < m && j+1<n ? img[i+1][j+1] : 0);
                if(valid(i+1,j+1,m,n)) validCount++;
                int topRight = (i-1 >= 0 && j+1<n ? img[i-1][j+1] : 0);
                if(valid(i-1,j+1,m,n)) validCount++;
                int topLeft = (i-1 >= 0 && j-1 >= 0 ? img[i-1][j-1] : 0);
                if(valid(i-1,j-1,m,n)) validCount++;
                int curr = img[i][j];
            
                int sum = (curr + left + right + top + bottumn + bottumnLeft + bottumnRight + topRight + topLeft);
                int avg = sum / validCount;
                cout<<"sum: "<<sum<<" validCount: "<<validCount;

                result[i][j] = avg;
                
            }
        }

        return result;
    }
};
